<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Letter Received - Feedback System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: 100%;
            text-align: center;
            backdrop-filter: blur(10px);
            animation: fadeIn 0.6s ease-out;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .header {
            margin-bottom: 30px;
        }
        
        .header h1 {
            color: #333;
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .header p {
            color: #666;
            font-size: 1.2em;
            line-height: 1.6;
        }
        
        .success-icon {
            font-size: 4em;
            color: #4CAF50;
            margin-bottom: 20px;
            animation: bounce 1s ease-in-out;
        }
        
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }
        
        .message {
            background: linear-gradient(45deg, #e8f5e8, #f0f8f0);
            border-radius: 15px;
            padding: 25px;
            margin: 25px 0;
            border-left: 5px solid #4CAF50;
        }
        
        .message h2 {
            color: #2e7d32;
            margin-bottom: 15px;
            font-size: 1.5em;
        }
        
        .message p {
            color: #388e3c;
            font-size: 1.1em;
            line-height: 1.6;
        }
        
        .btn {
            display: inline-block;
            padding: 15px 30px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            text-decoration: none;
            border-radius: 25px;
            font-size: 1.1em;
            font-weight: bold;
            margin: 20px 10px;
            transition: all 0.3s ease;
            cursor: pointer;
            border: none;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }
        
        .btn-secondary {
            background: #f8f9fa;
            color: #333;
            border: 2px solid #667eea;
        }
        
        .btn-secondary:hover {
            background: #667eea;
            color: white;
        }
        
        .info-section {
            margin-top: 30px;
            padding: 20px;
            background: rgba(33, 150, 243, 0.1);
            border-radius: 10px;
            border-left: 5px solid #2196F3;
        }
        
        .info-section h3 {
            color: #1976D2;
            margin-bottom: 10px;
        }
        
        .info-section p {
            color: #1565C0;
            font-size: 0.95em;
            line-height: 1.5;
        }
        
        .loading {
            display: none;
            font-size: 1.1em;
            color: #666;
            margin: 20px 0;
        }
        
        .loading.active {
            display: block;
        }
        
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            display: inline-block;
            margin-right: 10px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .status {
            padding: 15px;
            margin: 20px 0;
            border-radius: 10px;
            font-weight: bold;
            display: none;
        }
        
        .status.success {
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            display: block;
        }
        
        .status.error {
            background: linear-gradient(45deg, #f44336, #da190b);
            color: white;
            display: block;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 30px 20px;
                margin: 10px;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .success-icon {
                font-size: 3em;
            }
            
            .btn {
                width: 100%;
                margin: 10px 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="success-icon">‚úÖ</div>
        
        <div class="header">
            <h1>üì¨ Letter Received!</h1>
            <p>Thank you for scanning the QR code. This confirms you've received the letter.</p>
        </div>
        
        <div class="message">
            <h2>üéâ Confirmation Successful</h2>
            <p>A notification has been automatically sent to confirm that you've received and opened this letter. No further action is required from you.</p>
        </div>
        
        <div class="loading" id="loading">
            <div class="spinner"></div>
            Sending confirmation email...
        </div>
        
        <div class="status" id="status"></div>
        
        <button class="btn" id="sendConfirmation">üìß Send Confirmation</button>
        <button class="btn btn-secondary" id="manualEmail">‚úâÔ∏è Send Manual Email</button>
        
        <div class="info-section">
            <h3>‚ÑπÔ∏è How this works:</h3>
            <p>
                When you scanned the QR code, it brought you to this page. Clicking the confirmation button will automatically send an email to the letter sender letting them know you've received their message. This is a simple and effective way to get delivery confirmation for physical mail.
            </p>
        </div>
    </div>

    <script>
        // Get parameters from URL (these would be encoded in the QR code)
        const urlParams = new URLSearchParams(window.location.search);
        const senderEmail = urlParams.get('sender') || 'sender@example.com';
        const letterID = urlParams.get('id') || 'LETTER-' + Date.now();
        const recipientName = urlParams.get('name') || 'Recipient';
        const letterSubject = urlParams.get('subject') || 'Letter Confirmation';
        
        const loading = document.getElementById('loading');
        const status = document.getElementById('status');
        const sendBtn = document.getElementById('sendConfirmation');
        const manualBtn = document.getElementById('manualEmail');
        
        function showStatus(message, type) {
            status.textContent = message;
            status.className = `status ${type}`;
            status.style.display = 'block';
            
            setTimeout(() => {
                status.style.display = 'none';
            }, 5000);
        }
        
        function sendConfirmationEmail() {
            loading.classList.add('active');
            sendBtn.disabled = true;
            
            // Simulate sending email (in real implementation, this would call your backend)
            setTimeout(() => {
                loading.classList.remove('active');
                
                // Create the confirmation email content
                const currentDate = new Date().toLocaleString();
                const confirmationSubject = `Letter Received Confirmation - ${letterSubject}`;
                const confirmationBody = `Hello,

This is an automated confirmation that your letter has been received and read.

Details:
- Letter ID: ${letterID}
- Recipient: ${recipientName}
- Confirmed at: ${currentDate}
- IP Address: ${getApproximateLocation()}

The QR code in your letter was scanned successfully, confirming delivery.

This is an automated message from the Letter Feedback System.`;
                
                // Open email client with pre-filled content
                const mailtoLink = `mailto:${senderEmail}?subject=${encodeURIComponent(confirmationSubject)}&body=${encodeURIComponent(confirmationBody)}`;
                window.location.href = mailtoLink;
                
                showStatus('Confirmation email opened in your default email client!', 'success');
                sendBtn.textContent = '‚úÖ Confirmation Sent';
                sendBtn.disabled = false;
            }, 2000);
        }
        
        function sendManualEmail() {
            const subject = `Manual Letter Confirmation - ${letterSubject}`;
            const body = `Hello,

I'm writing to confirm that I received your letter (ID: ${letterID}).

Thank you for including the QR code feedback system - it's a great way to confirm delivery!

Best regards,
${recipientName}`;
            
            const mailtoLink = `mailto:${senderEmail}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
            window.location.href = mailtoLink;
            
            showStatus('Manual email opened in your default email client!', 'success');
        }
        
        function getApproximateLocation() {
            // In a real implementation, you might use an IP geolocation service
            return 'Location services not available';
        }
        
        // Auto-send confirmation after a short delay (optional)
        setTimeout(() => {
            if (senderEmail && senderEmail !== 'sender@example.com') {
                sendConfirmationEmail();
            }
        }, 3000);
        
        // Event listeners
        sendBtn.addEventListener('click', sendConfirmationEmail);
        manualBtn.addEventListener('click', sendManualEmail);
        
        // Update page content based on URL parameters
        if (recipientName && recipientName !== 'Recipient') {
            document.querySelector('.header p').textContent = `Thank you ${recipientName} for scanning the QR code. This confirms you've received the letter.`;
        }
    </script>
</body>
</html>
